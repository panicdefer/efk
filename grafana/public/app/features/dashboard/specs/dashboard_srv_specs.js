/*! grafana - v4.0.2-1481203731 - 2016-12-08
 * Copyright (c) 2016 Torkel Ã–degaard; Licensed Apache-2.0 */

System.register(["test/lib/common","../dashboard_srv"],function(a){var b,c;return{setters:[function(a){b=a},function(a){c=a}],execute:function(){b.describe("dashboardSrv",function(){var a;b.beforeEach(function(){a=new c.DashboardSrv({},{},{})}),b.describe("when creating new dashboard with defaults only",function(){var c;b.beforeEach(function(){c=a.create({},{})}),b.it("should have title",function(){b.expect(c.title).to.be("No Title")}),b.it("should have meta",function(){b.expect(c.meta.canSave).to.be(!0),b.expect(c.meta.canShare).to.be(!0)}),b.it("should have default properties",function(){b.expect(c.rows.length).to.be(0)})}),b.describe("when getting next panel id",function(){var c;b.beforeEach(function(){c=a.create({rows:[{panels:[{id:5}]}]})}),b.it("should return max id + 1",function(){b.expect(c.getNextPanelId()).to.be(6)})}),b.describe("row and panel manipulation",function(){var c;b.beforeEach(function(){c=a.create({})}),b.it("adding default should split span in half",function(){c.addEmptyRow(),c.rows[0].addPanel({span:12}),c.rows[0].addPanel({span:12}),b.expect(c.rows[0].panels[0].span).to.be(6),b.expect(c.rows[0].panels[1].span).to.be(6)}),b.it("duplicate panel should try to add it to same row",function(){var a={span:4,attr:"123",id:10};c.addEmptyRow(),c.rows[0].addPanel(a),c.duplicatePanel(a,c.rows[0]),b.expect(c.rows[0].panels[0].span).to.be(4),b.expect(c.rows[0].panels[1].span).to.be(4),b.expect(c.rows[0].panels[1].attr).to.be("123"),b.expect(c.rows[0].panels[1].id).to.be(11)}),b.it("duplicate panel should remove repeat data",function(){var a={span:4,attr:"123",id:10,repeat:"asd",scopedVars:{test:"asd"}};c.addEmptyRow(),c.rows[0].addPanel(a),c.duplicatePanel(a,c.rows[0]),b.expect(c.rows[0].panels[1].repeat).to.be(void 0),b.expect(c.rows[0].panels[1].scopedVars).to.be(void 0)})}),b.describe("when creating dashboard with editable false",function(){var c;b.beforeEach(function(){c=a.create({editable:!1})}),b.it("should set editable false",function(){b.expect(c.editable).to.be(!1)})}),b.describe("when creating dashboard with old schema",function(){var c,d,e,f;b.beforeEach(function(){c=a.create({services:{filter:{time:{from:"now-1d",to:"now"},list:[{}]}},pulldowns:[{type:"filtering",enable:!0},{type:"annotations",enable:!0,annotations:[{name:"old"}]}],rows:[{panels:[{type:"graph",legend:!0,aliasYAxis:{test:2},y_formats:["kbyte","ms"],grid:{min:1,max:10,rightMin:5,rightMax:15,leftLogBase:1,rightLogBase:2,threshold1:200,threshold2:400,threshold1Color:"yellow",threshold2Color:"red"},leftYAxisLabel:"left label",targets:[{refId:"A"},{}]},{type:"singlestat",legend:!0,thresholds:"10,20,30",aliasYAxis:{test:2},grid:{min:1,max:10},targets:[{refId:"A"},{}]},{type:"table",legend:!0,styles:[{thresholds:["10","20","30"]},{thresholds:["100","200","300"]}],targets:[{refId:"A"},{}]}]}]}),d=c.rows[0].panels[0],e=c.rows[0].panels[1],f=c.rows[0].panels[2]}),b.it("should have title",function(){b.expect(c.title).to.be("No Title")}),b.it("should have panel id",function(){b.expect(d.id).to.be(1)}),b.it("should move time and filtering list",function(){b.expect(c.time.from).to.be("now-1d"),b.expect(c.templating.list[0].allFormat).to.be("glob")}),b.it("graphite panel should change name too graph",function(){b.expect(d.type).to.be("graph")}),b.it("single stat panel should have two thresholds",function(){b.expect(e.thresholds).to.be("20,30")}),b.it("queries without refId should get it",function(){b.expect(d.targets[1].refId).to.be("B")}),b.it("update legend setting",function(){b.expect(d.legend.show).to.be(!0)}),b.it("move aliasYAxis to series override",function(){b.expect(d.seriesOverrides[0].alias).to.be("test"),b.expect(d.seriesOverrides[0].yaxis).to.be(2)}),b.it("should move pulldowns to new schema",function(){b.expect(c.annotations.list[0].name).to.be("old")}),b.it("table panel should only have two thresholds values",function(){b.expect(f.styles[0].thresholds[0]).to.be("20"),b.expect(f.styles[0].thresholds[1]).to.be("30"),b.expect(f.styles[1].thresholds[0]).to.be("200"),b.expect(f.styles[1].thresholds[1]).to.be("300")}),b.it("graph grid to yaxes options",function(){b.expect(d.yaxes[0].min).to.be(1),b.expect(d.yaxes[0].max).to.be(10),b.expect(d.yaxes[0].format).to.be("kbyte"),b.expect(d.yaxes[0].label).to.be("left label"),b.expect(d.yaxes[0].logBase).to.be(1),b.expect(d.yaxes[1].min).to.be(5),b.expect(d.yaxes[1].max).to.be(15),b.expect(d.yaxes[1].format).to.be("ms"),b.expect(d.yaxes[1].logBase).to.be(2),b.expect(d.grid.rightMax).to.be(void 0),b.expect(d.grid.rightLogBase).to.be(void 0),b.expect(d.y_formats).to.be(void 0)}),b.it("dashboard schema version should be set to latest",function(){b.expect(c.schemaVersion).to.be(13)}),b.it("graph thresholds should be migrated",function(){b.expect(d.thresholds.length).to.be(2),b.expect(d.thresholds[0].op).to.be("gt"),b.expect(d.thresholds[0].value).to.be(200),b.expect(d.thresholds[0].fillColor).to.be("yellow"),b.expect(d.thresholds[1].value).to.be(400),b.expect(d.thresholds[1].fillColor).to.be("red")})}),b.describe("when creating dashboard model with missing list for annoations or templating",function(){var c;b.beforeEach(function(){c=a.create({annotations:{enable:!0},templating:{enable:!0}})}),b.it("should add empty list",function(){b.expect(c.annotations.list.length).to.be(0),b.expect(c.templating.list.length).to.be(0)})}),b.describe("Given editable false dashboard",function(){var c;b.beforeEach(function(){c=a.create({editable:!1})}),b.it("Should set meta canEdit and canSave to false",function(){b.expect(c.meta.canSave).to.be(!1),b.expect(c.meta.canEdit).to.be(!1)}),b.it("getSaveModelClone should remove meta",function(){var a=c.getSaveModelClone();b.expect(a.meta).to.be(void 0)})}),b.describe("when loading dashboard with old influxdb query schema",function(){var c,d;b.beforeEach(function(){c=a.create({rows:[{panels:[{type:"graph",grid:{},yaxes:[{},{}],targets:[{alias:"$tag_datacenter $tag_source $col",column:"value",measurement:"logins.count",fields:[{func:"mean",name:"value",mathExpr:"*2",asExpr:"value"},{name:"one-minute",func:"mean",mathExpr:"*3",asExpr:"one-minute"}],tags:[],fill:"previous","function":"mean",groupBy:[{interval:"auto",type:"time"},{key:"source",type:"tag"},{type:"tag",key:"datacenter"}]}]}]}]}),d=c.rows[0].panels[0].targets[0]}),b.it("should update query schema",function(){b.expect(d.fields).to.be(void 0),b.expect(d.select.length).to.be(2),b.expect(d.select[0].length).to.be(4),b.expect(d.select[0][0].type).to.be("field"),b.expect(d.select[0][1].type).to.be("mean"),b.expect(d.select[0][2].type).to.be("math"),b.expect(d.select[0][3].type).to.be("alias")})}),b.describe("when creating dashboard model with missing list for annoations or templating",function(){var c;b.beforeEach(function(){c=a.create({annotations:{enable:!0},templating:{enable:!0}})}),b.it("should add empty list",function(){b.expect(c.annotations.list.length).to.be(0),b.expect(c.templating.list.length).to.be(0)})}),b.describe("Formatting epoch timestamp when timezone is set as utc",function(){var c;b.beforeEach(function(){c=a.create({timezone:"utc"})}),b.it("Should format timestamp with second resolution by default",function(){b.expect(c.formatDate(123456789e4)).to.be("2009-02-13 23:31:30")}),b.it("Should format timestamp with second resolution even if second format is passed as parameter",function(){b.expect(c.formatDate(1234567890007,"YYYY-MM-DD HH:mm:ss")).to.be("2009-02-13 23:31:30")}),b.it("Should format timestamp with millisecond resolution if format is passed as parameter",function(){b.expect(c.formatDate(1234567890007,"YYYY-MM-DD HH:mm:ss.SSS")).to.be("2009-02-13 23:31:30.007")})})})}}});