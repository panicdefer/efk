/*! grafana - v4.0.2-1481203731 - 2016-12-08
 * Copyright (c) 2016 Torkel Ã–degaard; Licensed Apache-2.0 */

System.register(["test/lib/common","../variable"],function(a){var b,c;return{setters:[function(a){b=a},function(a){c=a}],execute:function(){b.describe("containsVariable",function(){b.describe("when checking if a string contains a variable",function(){b.it("should find it with $var syntax",function(){var a=c.containsVariable("this.$test.filters","test");b.expect(a).to.be(!0)}),b.it("should not find it if only part matches with $var syntax",function(){var a=c.containsVariable("this.$ServerDomain.filters","Server");b.expect(a).to.be(!1)}),b.it("should find it with [[var]] syntax",function(){var a=c.containsVariable("this.[[test]].filters","test");b.expect(a).to.be(!0)}),b.it("should find it when part of segment",function(){var a=c.containsVariable("metrics.$env.$group-*","group");b.expect(a).to.be(!0)}),b.it("should find it its the only thing",function(){var a=c.containsVariable("$env","env");b.expect(a).to.be(!0)}),b.it("should be able to pass in multiple test strings",function(){var a=c.containsVariable("asd","asd2.$env","env");b.expect(a).to.be(!0)})})}),b.describe("assignModelProperties",function(){b.it("only set properties defined in defaults",function(){var a={test:"asd"};c.assignModelProperties(a,{propA:1,propB:2},{propB:0}),b.expect(a.propB).to.be(2),b.expect(a.test).to.be("asd")}),b.it("use default value if not found on source",function(){var a={test:"asd"};c.assignModelProperties(a,{propA:1,propB:2},{propC:10}),b.expect(a.propC).to.be(10)})})}}});