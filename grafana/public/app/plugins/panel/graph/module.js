/*! grafana - v4.0.2-1481203731 - 2016-12-08
 * Copyright (c) 2016 Torkel Ã–degaard; Licensed Apache-2.0 */

System.register(["./graph","./legend","./series_overrides_ctrl","./thresholds_form","./template","lodash","app/core/utils/file_export","app/plugins/sdk","./data_processor","./axes_editor"],function(a){var b,c,d,e,f,g,h,i=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)};return{setters:[function(a){},function(a){},function(a){},function(a){},function(a){b=a},function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a}],execute:function(){h=function(a){function h(b,d,e){a.call(this,b,d),this.annotationsSrv=e,this.hiddenSeries={},this.seriesList=[],this.dataList=[],this.annotations=[],this.colors=[],this.panelDefaults={datasource:null,renderer:"flot",yaxes:[{label:null,show:!0,logBase:1,min:null,max:null,format:"short"},{label:null,show:!0,logBase:1,min:null,max:null,format:"short"}],xaxis:{show:!0,mode:"time",name:null,values:[]},lines:!0,fill:1,linewidth:1,points:!1,pointradius:5,bars:!1,stack:!1,percentage:!1,legend:{show:!0,values:!1,min:!1,max:!1,current:!1,total:!1,avg:!1},nullPointMode:"connected",steppedLine:!1,tooltip:{value_type:"individual",shared:!0,sort:0,msResolution:!1},timeFrom:null,timeShift:null,targets:[{}],aliasColors:{},seriesOverrides:[],thresholds:[]},c["default"].defaults(this.panel,this.panelDefaults),c["default"].defaults(this.panel.tooltip,this.panelDefaults.tooltip),c["default"].defaults(this.panel.legend,this.panelDefaults.legend),c["default"].defaults(this.panel.xaxis,this.panelDefaults.xaxis),this.processor=new f.DataProcessor(this.panel),this.events.on("render",this.onRender.bind(this)),this.events.on("data-received",this.onDataReceived.bind(this)),this.events.on("data-error",this.onDataError.bind(this)),this.events.on("data-snapshot-load",this.onDataSnapshotLoad.bind(this)),this.events.on("init-edit-mode",this.onInitEditMode.bind(this)),this.events.on("init-panel-actions",this.onInitPanelActions.bind(this))}return i(h,a),h.$inject=["$scope","$injector","annotationsSrv"],h.prototype.onInitEditMode=function(){this.addEditorTab("Axes",g.axesEditorComponent,2),this.addEditorTab("Legend","public/app/plugins/panel/graph/tab_legend.html",3),this.addEditorTab("Display","public/app/plugins/panel/graph/tab_display.html",4),this.addEditorTab("Alert",e.alertTab,5),this.subTabIndex=0},h.prototype.onInitPanelActions=function(a){a.push({text:"Export CSV (series as rows)",click:"ctrl.exportCsv()"}),a.push({text:"Export CSV (series as columns)",click:"ctrl.exportCsvColumns()"}),a.push({text:"Toggle legend",click:"ctrl.toggleLegend()"})},h.prototype.issueQueries=function(b){return this.annotationsPromise=this.annotationsSrv.getAnnotations({dashboard:this.dashboard,panel:this.panel,range:this.range}),a.prototype.issueQueries.call(this,b)},h.prototype.zoomOut=function(a){this.publishAppEvent("zoom-out",2)},h.prototype.onDataSnapshotLoad=function(a){this.annotationsPromise=this.annotationsSrv.getAnnotations({dashboard:this.dashboard,panel:this.panel,range:this.range}),this.onDataReceived(a)},h.prototype.onDataError=function(a){this.seriesList=[],this.annotations=[],this.render([])},h.prototype.onDataReceived=function(a){var b=this;this.dataList=a,this.seriesList=this.processor.getSeriesList({dataList:a,range:this.range}),this.datapointsCount=this.seriesList.reduce(function(a,b){return a+b.datapoints.length},0),this.datapointsOutside=!1;for(var c=0,d=this.seriesList;c<d.length;c++){var e=d[c];e.isOutsideRange&&(this.datapointsOutside=!0)}this.annotationsPromise.then(function(a){b.loading=!1,b.alertState=a.alertState,b.annotations=a.annotations,b.render(b.seriesList)},function(){b.loading=!1,b.render(b.seriesList)})},h.prototype.onRender=function(){if(this.seriesList)for(var a=0,b=this.seriesList;a<b.length;a++){var c=b[a];c.applySeriesOverrides(this.panel.seriesOverrides),c.unit&&(this.panel.yaxes[c.yaxis-1].format=c.unit)}},h.prototype.changeSeriesColor=function(a,b){a.color=b,this.panel.aliasColors[a.alias]=a.color,this.render()},h.prototype.toggleSeries=function(a,b){b.ctrlKey||b.metaKey||b.shiftKey?this.hiddenSeries[a.alias]?delete this.hiddenSeries[a.alias]:this.hiddenSeries[a.alias]=!0:this.toggleSeriesExclusiveMode(a),this.render()},h.prototype.toggleSeriesExclusiveMode=function(a){var b=this,d=this.hiddenSeries;d[a.alias]&&delete d[a.alias];var e=c["default"].every(this.seriesList,function(b){return b.alias===a.alias||d[b.alias]});e?c["default"].each(this.seriesList,function(a){delete b.hiddenSeries[a.alias]}):c["default"].each(this.seriesList,function(c){c.alias!==a.alias&&(b.hiddenSeries[c.alias]=!0)})},h.prototype.toggleAxis=function(a){var b=c["default"].find(this.panel.seriesOverrides,{alias:a.alias});b||(b={alias:a.alias},this.panel.seriesOverrides.push(b)),a.yaxis=b.yaxis=2===a.yaxis?1:2,this.render()},h.prototype.addSeriesOverride=function(a){this.panel.seriesOverrides.push(a||{})},h.prototype.removeSeriesOverride=function(a){this.panel.seriesOverrides=c["default"].without(this.panel.seriesOverrides,a),this.render()},h.prototype.toggleLegend=function(){this.panel.legend.show=!this.panel.legend.show,this.refresh()},h.prototype.legendValuesOptionChanged=function(){var a=this.panel.legend;a.values=a.min||a.max||a.avg||a.current||a.total,this.render()},h.prototype.exportCsv=function(){d.exportSeriesListToCsv(this.seriesList)},h.prototype.exportCsvColumns=function(){d.exportSeriesListToCsvColumns(this.seriesList)},h.template=b["default"],h}(e.MetricsPanelCtrl),a("GraphCtrl",h),a("PanelCtrl",h)}}});